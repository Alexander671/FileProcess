services:
  back:
    container_name: back
    restart: always
    command: >
      sh -c "
        python manage.py migrate --noinput &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000"
    build:
      context: ./
    ports:
      - "8000:8000"
    networks:
      - nw_internal
      - nw_external
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis

  celery_worker:
    restart: always
    command: celery -A core worker -l error
    build:
      context: ./
    env_file:
      - ./.env
#    volumes:
#      - media:/app/media/
#      - static:/app/static/
    networks:
      - nw_external
      - nw_internal
    depends_on:
      - redis

  celery_beat:
    container_name: celery_beat
    restart: always
    command: celery -A core beat
    build:
      context: ./
    env_file:
      - ./.env
#    volumes:
#      - media:/app/media/
#      - static:/app/static/
    networks:
      - nw_external
      - nw_internal
    depends_on:
      - redis

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - '${REDIS_PORT:-6379}:${REDIS_PORT:-6379}'
    command: redis-server --requirepass ${REDIS_PASSWORD:-yourpassword} --port ${REDIS_PORT:-6379}  --bind 0.0.0.0
    networks:
      - nw_internal

  postgres:
    container_name: postgres
    image: postgres:15.3-bullseye
    restart: always
    ports:
      - '${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}'
    networks:
      - nw_internal
    env_file:
      - ./.env
    volumes:
      - postgres:/var/lib/postgresql/data
    command: -p ${POSTGRES_PORT:-5432}

volumes:
  postgres:
  redis:

networks:
  nw_external:
  nw_internal:
    internal: true
